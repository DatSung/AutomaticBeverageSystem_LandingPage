---
import { API_URL } from '@constants/apiUrl'
import type { KioskModel } from "src/interfaces/kioskModel";

let models: KioskModel[] = [];

try {
  const res = await fetch(
    API_URL.kioskModels.gets
  );
  const json = await res.json();
  const allItems = json.response.items ?? [];

  // Ch·ªâ l·∫•y nh·ªØng model hi·ªÉn th·ªã c√¥ng khai v√† n·ªïi b·∫≠t, gi·ªõi h·∫°n 4 d√≤ng
  models = allItems
    .sort((a : KioskModel, b: KioskModel) => a.sortOrder - b.sortOrder)
    .slice(0, 4);
} catch (err) {
  console.error("Error fetching kiosk models:", err);
}
---

<section class="relative py-20 px-4 bg-gradient-to-br from-slate-50 via-white to-blue-50 overflow-hidden">
  <!-- Background decorations -->
  <div class="absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,rgba(59,130,246,0.06),transparent_60%)]"></div>
  <div class="absolute inset-0 bg-[radial-gradient(circle_at_70%_80%,rgba(16,185,129,0.05),transparent_60%)]"></div>
  
  <!-- Floating elements -->
  <div class="absolute top-16 left-8 w-20 h-20 bg-blue-200/20 rounded-full blur-xl animate-pulse"></div>
  <div class="absolute bottom-16 right-8 w-24 h-24 bg-emerald-200/15 rounded-full blur-xl animate-pulse" style="animation-delay: 2s;"></div>

  <div class="relative z-10 max-w-7xl mx-auto">
    <!-- Enhanced Header -->
    <div class="text-center mb-16">
      <div class="inline-flex items-center px-4 py-2 bg-blue-100/80 backdrop-blur-sm text-blue-700 rounded-full text-sm font-medium mb-6 shadow-sm border border-blue-200/50">
        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
        </svg>
        S·∫£n ph·∫©m n·ªïi b·∫≠t
      </div>
      
      <h2 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-6 leading-tight">
        C√°c d√≤ng m√°y b√°n h√†ng t·ª± ƒë·ªông
        <br class="hidden sm:block">
        <span class="bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent">th√¥ng minh tham kh·∫£o</span>
      </h2>
      
      <p class="text-lg md:text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed">
        AICOfi s·ªü h·ªØu nhi·ªÅu d√≤ng m√°y b√°n h√†ng th√¥ng minh hi·ªán ƒë·∫°i, v·ªõi c√°c ch·ª©c nƒÉng
        chuy√™n bi·ªát, ph√π h·ª£p v·ªõi nhi·ªÅu m√¥ h√¨nh kinh doanh kh√°c nhau.
      </p>
    </div>

    <!-- Models Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
      {
        models.map((model, index) => (
          <div 
            class="group relative bg-white/95 backdrop-blur-sm rounded-3xl p-8 shadow-xl hover:shadow-2xl transition-all duration-500 hover:-translate-y-4 border border-gray-100/80 overflow-hidden"
            style={`animation-delay: ${index * 150}ms`}
          >
            <!-- Animated background gradient -->
            <div class="absolute inset-0 bg-gradient-to-br from-blue-50/40 via-emerald-50/30 to-blue-50/40 opacity-0 group-hover:opacity-100 transition-all duration-500"></div>
            
            <!-- Glowing border effect -->
            <div class="absolute inset-0 rounded-3xl bg-gradient-to-r from-blue-300/30 via-emerald-300/30 to-blue-300/30 opacity-0 group-hover:opacity-100 transition-opacity duration-500 blur-sm"></div>
            
            <div class="relative z-10 flex flex-col items-center text-center h-full">
              <!-- Image container with enhanced styling -->
              <div class="relative mb-6 w-full">
                <div class="aspect-[3/4] rounded-2xl bg-gradient-to-br from-gray-50 to-gray-100 p-4 group-hover:scale-105 transition-transform duration-300 shadow-sm overflow-hidden">
                  <img
                    src={model.heroImageUrl}
                    alt={model.kioskModelName}
                    class="w-full rounded-xl h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    loading="lazy"
                  />
                </div>
                
                <!-- Floating badge if tagline exists -->
                {model.tagline && (
                  <div class="absolute -top-0 -right-0 bg-gradient-to-r from-cyan-400 to-cyan-400 text-white text-xs font-semibold px-3 py-1 rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-all duration-300">
                    {model.tagline}
                  </div>
                )}
              </div>

              <!-- Content -->
              <div class="flex-1 flex flex-col justify-between">
                <div>
                  <h3 class="text-lg font-bold text-gray-900 mb-3 group-hover:text-blue-700 transition-colors duration-300 leading-snug">
                    {model.kioskModelName}
                  </h3>

                  <p class="text-sm text-gray-600 leading-relaxed group-hover:text-gray-700 transition-colors duration-300 mb-4">
                    {model.kioskModelDescription}
                  </p>
                </div>

                <!-- Tech specs preview -->
                {(model.footprint || model.power || model.weight) && (
                  <div class="space-y-2 text-xs text-gray-500 mb-4 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
                    {model.footprint && (
                      <div class="flex items-center justify-center">
                        <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4a1 1 0 011-1h4m10 0h4a1 1 0 011 1v4m0 10v4a1 1 0 01-1 1h-4m-10 0H4a1 1 0 01-1-1v-4"/>
                        </svg>
                        <span>K√≠ch th∆∞·ªõc: {model.footprint}</span>
                      </div>
                    )}
                    {model.power && (
                      <div class="flex items-center justify-center">
                        <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                        </svg>
                        <span>C√¥ng su·∫•t: {model.power}</span>
                      </div>
                    )}
                  </div>
                )}

                <!-- View details button -->
                <a href={`/models/${model.kioskModelId}`} class="w-full py-2 px-4 bg-gradient-to-r from-blue-500 to-emerald-500 text-white font-semibold rounded-2xl opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0 hover:scale-105 shadow-lg text-sm">
                  Xem chi ti·∫øt
                </a>
              </div>
            </div>

            <!-- Subtle shine effect -->
            <div class="absolute inset-0 rounded-3xl bg-gradient-to-r from-transparent via-white/10 to-transparent -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000 ease-out"></div>
          </div>
        ))
      }
    </div>

    <!-- Enhanced CTA Section -->
    <div class="text-center">
      <div class="inline-flex flex-col sm:flex-row items-center gap-4">
        <a
          href="/models"
          class="group inline-flex items-center px-10 py-4 bg-gradient-to-r from-cyan-400 to-cyan-500 hover:from-cyan-500 hover:to-cyan-600 text-white font-bold rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105 text-lg"
        >
          <span>Xem th√™m</span>
          <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
          </svg>
        </a>
        
        <button class="inline-flex items-center px-8 py-4 bg-white/80 backdrop-blur-sm text-gray-800 font-semibold rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 border border-blue-200 group">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
          </svg>
          <span>T∆∞ v·∫•n mi·ªÖn ph√≠</span>
        </button>
      </div>
      
      <p class="text-sm text-gray-500 mt-6">
        ‚ú® H·ªó tr·ª£ t√πy ch·ªânh theo y√™u c·∫ßu ‚Ä¢ üöö Giao h√†ng to√†n qu·ªëc ‚Ä¢ üõ†Ô∏è B·∫£o h√†nh 24 th√°ng
      </p>
    </div>
  </div>
</section>

<style>
  .group {
    animation: fadeInUp 0.8s ease-out forwards;
    opacity: 0;
    transform: translateY(40px);
  }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>